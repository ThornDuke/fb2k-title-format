[
  {
    "token": "add",
    "description": "### Function $add(a,b,...)\n\nadds a and b\n\n[FB2K reference]()"
  },
  {
    "token": "div",
    "description": "### Function $div(a,b,...)\n\nDivides a by b and rounds down to an integer. If b evaluates to zero, it returns a. Can be used with an arbitrary number of arguments.\n\n[FB2K reference]()"
  },
  {
    "token": "sub",
    "description": "### Function $sub(a,b,..)\n\nSubtracts b from a. Can be used with an arbitrary number of arguments.\n\n[FB2K reference]()"
  },
  {
    "token": "mul",
    "description": "### Function $mul(a,b,..)\n\nMultiplies a and b. Can be used with an arbitrary number of arguments.\n\n[FB2K reference]()"
  },
  {
    "token": "muldiv",
    "description": "### Function $muldiv(a,b,c)\n\nMultiplies a and b, then divides by c. The result is rounded to the nearest integer.\n\n[FB2K reference]()"
  },
  {
    "token": "greater",
    "description": "### Function $greater(a,b)\n\nReturns true, if a is greater than b, otherwise false.\n\n[FB2K reference]()"
  },
  {
    "token": "max",
    "description": "### Function $max(a,b,...)\n\nReturns the maximum of a and b. Can be used with an arbitrary number of arguments.\n\n[FB2K reference]()"
  },
  {
    "token": "min",
    "description": "### Function $min(a,b,...)\n\nReturns the minimum of a and b. Can be used with an arbitrary number of arguments.\n\n[FB2K reference]()"
  },
  {
    "token": "mod",
    "description": "### Function $mod(a,b,...)\n\nComputes the remainder of dividing a through b. The result has the same sign as a. If b evaluates to zero, the result is a. Can be used with an arbitrary number of arguments.\n\n[FB2K reference]()"
  },
  {
    "token": "rand",
    "description": "### Function $rand()\n\nGenerates a random number in the range from 0 to 2^32-1.\n\n[FB2K reference]()"
  },
  {
    "token": "and",
    "description": "### Function $and(expr,...)\n\nLogical And of an arbitrary number of arguments. Returns true, if and only if all expr arguments evaluate to true.\n\n[FB2K reference]()"
  },
  {
    "token": "or",
    "description": "### Function $or(expr,...)\n\nLogical Or of an arbitrary number of arguments. Returns true, if at least one expression evaluates to true.\n\n[FB2K reference]()"
  },
  {
    "token": "not",
    "description": "### Function $not(expr)\n\nLogical Not. Returns the logical opposite of EXPR: false, if expr is true and true if expr is false.\n\n[FB2K reference]()"
  },
  {
    "token": "xor",
    "description": "### Function $xor(expr,...)\n\nLogical Exclusive-or of an arbitrary number of arguments. Returns true, if an odd number of arguments evaluate to true.\n\n[FB2K reference]()"
  },
  {
    "token": "if",
    "description": "### Function $if(X,Y)\n\nIf cond contains at least one present field, executes/displays Y.\n\n[FB2K reference]()"
  },
  {
    "token": "if",
    "description": "### Function $if(X,Y,Z)\n\nIf X contains at least one present field, executes/displays Y, otherwise executes/displays Z.\n\n[FB2K reference]()"
  },
  {
    "token": "if2",
    "description": "### Function $if2(X,Y)\n\nIf X contains at least one present field, executes/displays X, otherwise executes/displays Y. Same as $if(X,X,Y).\n\n[FB2K reference]()"
  },
  {
    "token": "if3",
    "description": "### Function $if3(X,Y,Z,..)\n\nReturns the first of parameters that contains at least one present field.\n\n[FB2K reference]()"
  },
  {
    "token": "ifgreater",
    "description": "### Function $ifgreater(A,B,C,D)\n\nIf the number A is greater than the number B, executes/returns C, otherwise executes/returns D.\n\n[FB2K reference]()"
  },
  {
    "token": "iflonger",
    "description": "### Function $iflonger(A,B,C,D)\n\nIf the string A is longer than B characters, executes/returns C, otherwise executes/returns D.\n\n[FB2K reference]()"
  },
  {
    "token": "ifequal",
    "description": "### Function $ifequal(A,B,C,D)\n\nIf the number A is equal to the number B, executes/returns C, otherwise executes/returns D.\n\n[FB2K reference]()"
  },
  {
    "token": "longest",
    "description": "### Function $longest(A,B,C,….)\n\nCompares lengths of of A,B,C… and returns the longest one.\n\n[FB2K reference]()"
  },
  {
    "token": "select",
    "description": "### Function $select(N,A,B,C,….)\n\nReturns N-th of A,B,C… parameters.\n\n[FB2K reference]()"
  },
  {
    "token": "abbr",
    "description": "### Function $abbr(str)\n\nReturns abbreviation of string str. Words which begin with an alphanumeric character are shortened to the first character. Spaces and parentheses are stripped.\n\n[FB2K reference]()"
  },
  {
    "token": "ansi",
    "description": "### Function $ansi(str)\n\nConverts string str to system codepage and back. Any characters that are not present in the system codepage will be removed / replaced.\n\n[FB2K reference]()"
  },
  {
    "token": "ascii",
    "description": "### Function $ascii(str)\n\nConverts string str to ASCII. Any characters that are not present in ASCII will be removed / replaced.\n\n[FB2K reference]()"
  },
  {
    "token": "caps",
    "description": "### Function $caps(str)\n\nConverts first letter in every word of string str to uppercase, and all other letters to lowercase.\n\n[FB2K reference]()"
  },
  {
    "token": "caps2",
    "description": "### Function $caps2(str)\n\nConverts first letter in every word of string str to uppercase, and leaves all other letters as they are.\n\n[FB2K reference]()"
  },
  {
    "token": "char",
    "description": "### Function $char(nbr)\n\nReturns Unicode character of nbr.\n\n[FB2K reference]()"
  },
  {
    "token": "crc32",
    "description": "### Function $crc32(str)\n\nComputes the CRC32 of the string str as a number.\n\n[FB2K reference]()"
  },
  {
    "token": "crlf",
    "description": "### Function $crlf()\n\nInserts end-of-line marker (carriage return, line feed).\n\n[FB2K reference]()"
  },
  {
    "token": "tab",
    "description": "### Function $tab()\n\nInserts one tabulator character.\n\n[FB2K reference]()"
  },
  {
    "token": "tab",
    "description": "### Function $tab(count)\n\nInserts count tabulator characters.\n\n[FB2K reference]()"
  },
  {
    "token": "cut",
    "description": "### Function $cut(str,len)\n\nReturns first len characters from the left of the string str. This function is the same as $left(a,len). Negative numbers produce the entire string.\n\n[FB2K reference]()"
  },
  {
    "token": "directory",
    "description": "### Function $directory(path)\n\nExtracts only the directory name.\n\n[FB2K reference]()"
  },
  {
    "token": "directory",
    "description": "### Function $directory(path,n)\n\nExtracts directory name from the file path; goes up by n levels.\n\n[FB2K reference]()"
  },
  {
    "token": "directory_path",
    "description": "### Function $directory_path(path)\n\nExtracts directory path from the file path.\n\n[FB2K reference]()"
  },
  {
    "token": "ext",
    "description": "### Function $ext(path)\n\nExtracts file extension from string path, a file name or full path.\n\n[FB2K reference]()"
  },
  {
    "token": "filename",
    "description": "### Function $filename(path)\n\nExtracts file name from full path.\n\n[FB2K reference]()"
  },
  {
    "token": "fix_eol",
    "description": "### Function $fix_eol(str)\n\nIf str contains an end-of-line marker (CR-LF), the end-of-line marker and all text to the right of it is replaced by ' (...)'. Otherwise str is returned unaltered.\n\n[FB2K reference]()"
  },
  {
    "token": "fix_eol",
    "description": "### Function $fix_eol(str,indicator)\n\nIf str contains an end-of-line marker (CR-LF), the end-of-line marker and all text to the right of it is replaced by indicator. Otherwise str is returned unaltered.\n\n[FB2K reference]()"
  },
  {
    "token": "hex",
    "description": "### Function $hex(int,len)\n\nFormats the integer number int in hexadecimal notation with len digits. Pads with zeros from the left if necessary.\n\n[FB2K reference]()"
  },
  {
    "token": "insert",
    "description": "### Function $insert(str,insert,n)\n\nInserts 'insert' into str after n characters.\n\n[FB2K reference]()"
  },
  {
    "token": "left",
    "description": "### Function $left(str,len)\n\nReturns first len characters from the left of the string str. This function is the same as $cut(str,len). Negative numbers produce the entire string.\n\n[FB2K reference]()"
  },
  {
    "token": "len",
    "description": "### Function $len(str)\n\nReturns length of string str in characters.\n\n[FB2K reference]()"
  },
  {
    "token": "len2",
    "description": "### Function $len2(str)\n\nReturns length of string str in characters, respecting double-width character rules (double-width characters will be counted as two).\n\n[FB2K reference]()"
  },
  {
    "token": "longer",
    "description": "### Function $longer(str1,str2)\n\nReturns true, if string str1 is longer than string str2, false otherwise.\n\n[FB2K reference]()"
  },
  {
    "token": "lower",
    "description": "### Function $lower(str)\n\nConverts string str to lowercase.\n\n[FB2K reference]()"
  },
  {
    "token": "longest",
    "description": "### Function $longest(str1,...)\n\nReturns the longest of its arguments. Can be used with an arbitrary number of strings.\n\n[FB2K reference]()"
  },
  {
    "token": "num",
    "description": "### Function $num(num,len)\n\nFormats the integer number nbr in decimal notation with len characters. Pads with zeros from the left if necessary. len includes the dash when the number is negative. If nbr is not numeric, it is treated as zero.\n\n[FB2K reference]()"
  },
  {
    "token": "pad",
    "description": "### Function $pad(str,len)\n\nCreates a left-aligned version of the string str. If str is shorter than len characters, the function adds spaces to the right of str to make the result len characters long. Otherwise the function returns str unchanged.\n\n[FB2K reference]()"
  },
  {
    "token": "pad_right",
    "description": "### Function $pad_right(str,len)\n\nCreates a right-aligned version of the string str. If str is shorter than len characters, the function adds spaces to the left of str to make the result len characters long. Otherwise the function returns str unchanged.\n\n[FB2K reference]()"
  },
  {
    "token": "pad",
    "description": "### Function $pad(str,len,char)\n\nCreates a left-aligned version of the string str. If str is shorter than len characters, the function adds char to the right of str to make the result len characters long. Otherwise the function returns str unchanged.\n\n[FB2K reference]()"
  },
  {
    "token": "pad_right",
    "description": "### Function $pad_right(str,len,char)\n\nCreates a right-aligned version of the string str. If str is shorter than len characters, the function adds char to the left of str to make the result len characters long. Otherwise the function returns str unchanged.\n\n[FB2K reference]()"
  },
  {
    "token": "padcut",
    "description": "### Function $padcut(str,len)\n\nReturns first len characters from the left of str, if str is longer than len characters. Otherwise adds spaces to the right of str to make the result len characters long.\n\n[FB2K reference]()"
  },
  {
    "token": "padcut",
    "description": "### Function $padcut(str,len,char)\n\nReturns first len characters from the left of str, if str is longer than len characters. Otherwise adds char to the right of str to make the result len characters long.\n\n[FB2K reference]()"
  },
  {
    "token": "padcut_right",
    "description": "### Function $padcut_right(str,len)\n\nReturns first len characters from the left of str, if str is longer than len characters. Otherwise adds spaces to the left of str to make the result len characters long.\n\n[FB2K reference]()"
  },
  {
    "token": "padcut_right",
    "description": "### Function $padcut_right(str,len,char)\n\nReturns first len characters from the left of str, if str is longer than len characters. Otherwise adds char to the left of str to make the result len characters long.\n\n[FB2K reference]()"
  },
  {
    "token": "repeat",
    "description": "### Function $repeat(expr,count)\n\nReturns count copies of expr.\n\n[FB2K reference]()"
  },
  {
    "token": "right",
    "description": "### Function $right(str,len)\n\nReturns the first len characters from the right of string str.\n\n[FB2K reference]()"
  },
  {
    "token": "roman",
    "description": "### Function $roman(int)\n\nFormats the integer number int in roman notation.\n\n[FB2K reference]()"
  },
  {
    "token": "rot13",
    "description": "### Function $rot13(str)\n\nPerforms ROT13 transformation to given string.\n\n[FB2K reference]()"
  },
  {
    "token": "shortest",
    "description": "### Function $shortest(str,...)\n\nReturns the first shortest element of its arguments. Can be used with an arbitrary number of strings.\n\n[FB2K reference]()"
  },
  {
    "token": "strchr",
    "description": "### Function $strchr(str,char)\n\nReturns position of first occurrence of character char in string str.\n\n[FB2K reference]()"
  },
  {
    "token": "strrchr",
    "description": "### Function $strrchr(str,char)\n\nReturns positions of last occurrence of character char in string str.\n\n[FB2K reference]()"
  },
  {
    "token": "strstr",
    "description": "### Function $strstr(str1,str2)\n\nReturns position of first occurrence of string str2 in string str1. Function is case-sensitive.\n\n[FB2K reference]()"
  },
  {
    "token": "stricmp",
    "description": "### Function $stricmp(str1,str2)\n\nPerforms a case-insensitive comparison of the strings str1 and str2.\n\n[FB2K reference]()"
  },
  {
    "token": "stripprefix",
    "description": "### Function $stripprefix(str,prefix1,prefix2,...)\n\nRemoves the specified prefixes from string str.\n\n[FB2K reference]()"
  },
  {
    "token": "substr",
    "description": "### Function $substr(str,from,to)\n\nReturns substring of string str, starting from FROM-th character and ending at TO-th character.\n\n[FB2K reference]()"
  },
  {
    "token": "swapprefix",
    "description": "### Function $swapprefix(str)\n\nMoves A and The prefixes to the end of string str.\n\n[FB2K reference]()"
  },
  {
    "token": "swapprefix",
    "description": "### Function $swapprefix(str,prefix1,prefix2,...)\n\nMoves the specified prefixes to the end of string str.\n\n[FB2K reference]()"
  },
  {
    "token": "trim",
    "description": "### Function $trim(str)\n\nRemoves leading and trailing spaces from string str.\n\n[FB2K reference]()"
  },
  {
    "token": "upper",
    "description": "### Function $upper(str)\n\nConverts string str to uppercase.\n\n[FB2K reference]()"
  },
  {
    "token": "meta",
    "description": "### Function $meta(name)\n\nReturns value of tag called name. If multiple values of that tag exist, they are concatenated with ', ' as separator.\n\n[FB2K reference]()"
  },
  {
    "token": "meta",
    "description": "### Function $meta(name,n)\n\nReturns value of n-th (0,1,2 and so on) tag called name.\n\n[FB2K reference]()"
  },
  {
    "token": "meta_sep",
    "description": "### Function $meta_sep(name,sep)\n\nReturns value of tag called name. If multiple values of that tag exist, they are concatenated with sep as separator.\n\n[FB2K reference]()"
  },
  {
    "token": "meta_sep",
    "description": "### Function $meta_sep(name,sep,lastsep)\n\nReturns value of tag called name. If multiple values of that tag exist, they are concatenated with sep as separator between all but the last two values which are concatenated with lastsep.\n\n[FB2K reference]()"
  },
  {
    "token": "meta_test",
    "description": "### Function $meta_test(tag,...)\n\nReturns 1, if all given tags exist, undefined otherwise. Example: $meta_test(artist,title) → true\n\n[FB2K reference]()"
  },
  {
    "token": "meta_num",
    "description": "### Function $meta_num(name)\n\nReturns the number of values for the tag called name.\n\n[FB2K reference]()"
  },
  {
    "token": "%<album artist>%",
    "description": "### Tag %<album artist>%\n\nName of the artist of the album specified track belongs to.\n\n[FB2K reference]()"
  },
  {
    "token": "%album%",
    "description": "### Tag %album%\n\nName of the album specified track belongs to.\n\n[FB2K reference]()"
  },
  {
    "token": "%<album>%",
    "description": "### Tag %<album>%\n\nName of the album specified track belongs to.\n\n[FB2K reference]()"
  },
  {
    "token": "%artist%",
    "description": "### Tag %artist%\n\nName of the artist of the track.\n\n[FB2K reference]()"
  },
  {
    "token": "%<artist>%",
    "description": "### Tag %<artist>%\n\nName of the artist of the track.\n\n[FB2K reference]()"
  },
  {
    "token": "%date%",
    "description": "### Tag %date%\n\nRecording date of the album specified track belongs to, using 'date' metadata field.\n\n[FB2K reference]()"
  },
  {
    "token": "%<date>%",
    "description": "### Tag %<date>%\n\nRecording date of the album specified track belongs to, using 'date' metadata field.\n\n[FB2K reference]()"
  },
  {
    "token": "%genre%",
    "description": "### Tag %genre%\n\nGenre of the album specified track belongs to, using 'genre' metadata field.\n\n[FB2K reference]()"
  },
  {
    "token": "%<genre>%",
    "description": "### Tag %<genre>%\n\nGenre of the album specified track belongs to, using 'genre' metadata field.\n\n[FB2K reference]()"
  },
  {
    "token": "%discnumber%",
    "description": "### Tag %discnumber%\n\nIndex of disc specified track belongs to, within the album. Available only when 'discnumber'/'disc' field is present in track’s metadata.\n\n[FB2K reference]()"
  },
  {
    "token": "%<discnumber>%",
    "description": "### Tag %<discnumber>%\n\nIndex of disc specified track belongs to, within the album. Available only when 'discnumber'/'disc' field is present in track’s metadata.\n\n[FB2K reference]()"
  },
  {
    "token": "%totaldiscs%",
    "description": "### Tag %totaldiscs%\n\nIndex of total discs specified tracks belong to, within the album. Available only when 'discnumber'/'disc' field is present in track’s metadata.\n\n[FB2K reference]()"
  },
  {
    "token": "%<totaldiscs>%",
    "description": "### Tag %<totaldiscs>%\n\nIndex of total discs specified tracks belong to, within the album. Available only when 'discnumber'/'disc' field is present in track’s metadata.\n\n[FB2K reference]()"
  },
  {
    "token": "%track artist%",
    "description": "### Tag %track artist%\n\nName of the artist of the track; present only if %album artist% is different than %artist% for specific track.\n\n[FB2K reference]()"
  },
  {
    "token": "%<track artist>%",
    "description": "### Tag %<track artist>%\n\nName of the artist of the track; present only if %album artist% is different than %artist% for specific track.\n\n[FB2K reference]()"
  },
  {
    "token": "%title%",
    "description": "### Tag %title%\n\nTitle of the track. If 'title' metadata field is missing, file name is used instead.\n\n[FB2K reference]()"
  },
  {
    "token": "%<title>%",
    "description": "### Tag %<title>%\n\nTitle of the track. If 'title' metadata field is missing, file name is used instead.\n\n[FB2K reference]()"
  },
  {
    "token": "%tracknumber%",
    "description": "### Tag %tracknumber%\n\nIndex of specified track within the album. Available only when 'tracknumber' field is present in track’s metadata. An extra '0' is placed in front of single digit track numbers.\n\n[FB2K reference]()"
  },
  {
    "token": "%<tracknumber>%",
    "description": "### Tag %<tracknumber>%\n\nIndex of specified track within the album. Available only when 'tracknumber' field is present in track’s metadata. An extra '0' is placed in front of single digit track numbers.\n\n[FB2K reference]()"
  },
  {
    "token": "%track number%",
    "description": "### Tag %track number%\n\nSimilar to %tracknumber%, however single digit track numbers are not reformatted to have an extra 0.\n\n[FB2K reference]()"
  },
  {
    "token": "%<track number>%",
    "description": "### Tag %<track number>%\n\nSimilar to %tracknumber%, however single digit track numbers are not reformatted to have an extra 0.\n\n[FB2K reference]()"
  },
  {
    "token": "%totaltracks%",
    "description": "### Tag %totaltracks%\n\nIndex of total tracks specified tracks belong to, within the album.\n\n[FB2K reference]()"
  },
  {
    "token": "%<totaltracks>%",
    "description": "### Tag %<totaltracks>%\n\nIndex of total tracks specified tracks belong to, within the album.\n\n[FB2K reference]()"
  },
  {
    "token": "%bitrate%",
    "description": "### Tag %bitrate%\n\nBitrate of the track in kilobits per second.\n\n[FB2K reference]()"
  },
  {
    "token": "%<bitrate>%",
    "description": "### Tag %<bitrate>%\n\nBitrate of the track in kilobits per second.\n\n[FB2K reference]()"
  },
  {
    "token": "%channels%",
    "description": "### Tag %channels%\n\nNumber of channels in the track, as text.\n\n[FB2K reference]()"
  },
  {
    "token": "%<channels>%",
    "description": "### Tag %<channels>%\n\nNumber of channels in the track, as text.\n\n[FB2K reference]()"
  },
  {
    "token": "%channel_mask%",
    "description": "### Tag %channel_mask%\n\nDescription of the used audio channels in the track.\n\n[FB2K reference]()"
  },
  {
    "token": "%<channel_mask>%",
    "description": "### Tag %<channel_mask>%\n\nDescription of the used audio channels in the track.\n\n[FB2K reference]()"
  },
  {
    "token": "%codec%",
    "description": "### Tag %codec%\n\nName of codec used to encode the track.\n\n[FB2K reference]()"
  },
  {
    "token": "%<codec>%",
    "description": "### Tag %<codec>%\n\nName of codec used to encode the track.\n\n[FB2K reference]()"
  },
  {
    "token": "%codec_profile%",
    "description": "### Tag %codec_profile%\n\nAdditional information about encoding settings used.\n\n[FB2K reference]()"
  },
  {
    "token": "%<codec_profile>%",
    "description": "### Tag %<codec_profile>%\n\nAdditional information about encoding settings used.\n\n[FB2K reference]()"
  },
  {
    "token": "%codec_long%",
    "description": "### Tag %codec_long%\n\nLong name of the codec, including profile.\n\n[FB2K reference]()"
  },
  {
    "token": "%<codec_long>%",
    "description": "### Tag %<codec_long>%\n\nLong name of the codec, including profile.\n\n[FB2K reference]()"
  },
  {
    "token": "%path_sort%",
    "description": "### Tag %path_sort%\n\nPath of the file; for use with sorting, where order of subsongs within a file needs to be preserved.\n\n[FB2K reference]()"
  },
  {
    "token": "%<path_sort>%",
    "description": "### Tag %<path_sort>%\n\nPath of the file; for use with sorting, where order of subsongs within a file needs to be preserved.\n\n[FB2K reference]()"
  },
  {
    "token": "%filesize%",
    "description": "### Tag %filesize%\n\nThe exact file size in bytes\n\n[FB2K reference]()"
  },
  {
    "token": "%<filesize>%",
    "description": "### Tag %<filesize>%\n\nThe exact file size in bytes\n\n[FB2K reference]()"
  },
  {
    "token": "%filesize_natural%",
    "description": "### Tag %filesize_natural%\n\nThe approximate file size, automatically formatted in appropriate units such as megabytes or kilobytes.\n\n[FB2K reference]()"
  },
  {
    "token": "%<filesize_natural>%",
    "description": "### Tag %<filesize_natural>%\n\nThe approximate file size, automatically formatted in appropriate units such as megabytes or kilobytes.\n\n[FB2K reference]()"
  },
  {
    "token": "%length%",
    "description": "### Tag %length%\n\nThe length of the track formatted as hours, minutes, and seconds, rounded to the nearest second.\n\n[FB2K reference]()"
  },
  {
    "token": "%<length>%",
    "description": "### Tag %<length>%\n\nThe length of the track formatted as hours, minutes, and seconds, rounded to the nearest second.\n\n[FB2K reference]()"
  },
  {
    "token": "%length_ex%",
    "description": "### Tag %length_ex%\n\nThe length of the track formatted as hours, minutes, seconds, and milliseconds, rounded to the nearest millisecond.\n\n[FB2K reference]()"
  },
  {
    "token": "%<length_ex>%",
    "description": "### Tag %<length_ex>%\n\nThe length of the track formatted as hours, minutes, seconds, and milliseconds, rounded to the nearest millisecond.\n\n[FB2K reference]()"
  },
  {
    "token": "%length_seconds%",
    "description": "### Tag %length_seconds%\n\nThe length of the track in seconds, rounded to the nearest second.\n\n[FB2K reference]()"
  },
  {
    "token": "%<length_seconds>%",
    "description": "### Tag %<length_seconds>%\n\nThe length of the track in seconds, rounded to the nearest second.\n\n[FB2K reference]()"
  },
  {
    "token": "%length_seconds_fp%",
    "description": "### Tag %length_seconds_fp%\n\nThe length of the track in seconds as a floating point number.\n\n[FB2K reference]()"
  },
  {
    "token": "%<length_seconds_fp>%",
    "description": "### Tag %<length_seconds_fp>%\n\nThe length of the track in seconds as a floating point number.\n\n[FB2K reference]()"
  },
  {
    "token": "%length_samples%",
    "description": "### Tag %length_samples%\n\nThe length of the track in samples.\n\n[FB2K reference]()"
  },
  {
    "token": "%<length_samples>%",
    "description": "### Tag %<length_samples>%\n\nThe length of the track in samples.\n\n[FB2K reference]()"
  },
  {
    "token": "%samplerate%",
    "description": "### Tag %samplerate%\n\nSample rate of the track, in Hz.\n\n[FB2K reference]()"
  },
  {
    "token": "%<samplerate>%",
    "description": "### Tag %<samplerate>%\n\nSample rate of the track, in Hz.\n\n[FB2K reference]()"
  },
  {
    "token": "%__codec%",
    "description": "### Tag %__codec%\n\nCodec.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__codec>%",
    "description": "### Tag %<__codec>%\n\nCodec.\n\n[FB2K reference]()"
  },
  {
    "token": "%__codec_profile%",
    "description": "### Tag %__codec_profile%\n\nCodec Profile.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__codec_profile>%",
    "description": "### Tag %<__codec_profile>%\n\nCodec Profile.\n\n[FB2K reference]()"
  },
  {
    "token": "%__samplerate%",
    "description": "### Tag %__samplerate%\n\nSample Rate, in hertz.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__samplerate>%",
    "description": "### Tag %<__samplerate>%\n\nSample Rate, in hertz.\n\n[FB2K reference]()"
  },
  {
    "token": "%__bitrate%",
    "description": "### Tag %__bitrate%\n\nBitrate, in kilobits per second.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__bitrate>%",
    "description": "### Tag %<__bitrate>%\n\nBitrate, in kilobits per second.\n\n[FB2K reference]()"
  },
  {
    "token": "%__tool%",
    "description": "### Tag %__tool%\n\nTool used to produce the file, possibly guessed.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__tool>%",
    "description": "### Tag %<__tool>%\n\nTool used to produce the file, possibly guessed.\n\n[FB2K reference]()"
  },
  {
    "token": "%__encoding%",
    "description": "### Tag %__encoding%\n\nEncoding lossiness.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__encoding>%",
    "description": "### Tag %<__encoding>%\n\nEncoding lossiness.\n\n[FB2K reference]()"
  },
  {
    "token": "%__channels%",
    "description": "### Tag %__channels%\n\nChannels count.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__channels>%",
    "description": "### Tag %<__channels>%\n\nChannels count.\n\n[FB2K reference]()"
  },
  {
    "token": "%__bitspersample%",
    "description": "### Tag %__bitspersample%\n\nBits Per Sample.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__bitspersample>%",
    "description": "### Tag %<__bitspersample>%\n\nBits Per Sample.\n\n[FB2K reference]()"
  },
  {
    "token": "%__decoded_bitspersample%",
    "description": "### Tag %__decoded_bitspersample%\n\nBits Per Sample after decoding.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__decoded_bitspersample>%",
    "description": "### Tag %<__decoded_bitspersample>%\n\nBits Per Sample after decoding.\n\n[FB2K reference]()"
  },
  {
    "token": "%__bitspersample_extra%",
    "description": "### Tag %__bitspersample_extra%\n\nFormat of 32-bit audio data.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__bitspersample_extra>%",
    "description": "### Tag %<__bitspersample_extra>%\n\nFormat of 32-bit audio data.\n\n[FB2K reference]()"
  },
  {
    "token": "%__tagtype%",
    "description": "### Tag %__tagtype%\n\nTag Type, comma-separated list of tag formats.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__tagtype>%",
    "description": "### Tag %<__tagtype>%\n\nTag Type, comma-separated list of tag formats.\n\n[FB2K reference]()"
  },
  {
    "token": "%__cue_embedded%",
    "description": "### Tag %__cue_embedded%\n\nEmbedded Cuesheet presence.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__cue_embedded>%",
    "description": "### Tag %<__cue_embedded>%\n\nEmbedded Cuesheet presence.\n\n[FB2K reference]()"
  },
  {
    "token": "%__md5%",
    "description": "### Tag %__md5%\n\nAudio MD5 hash, if container defines it.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__md5>%",
    "description": "### Tag %<__md5>%\n\nAudio MD5 hash, if container defines it.\n\n[FB2K reference]()"
  },
  {
    "token": "%__WAVEFORMATEXTENSIBLE_CHANNEL_MASK%",
    "description": "### Tag %__WAVEFORMATEXTENSIBLE_CHANNEL_MASK%\n\nChannel mask, channel layout of the track coded as hex.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__WAVEFORMATEXTENSIBLE_CHANNEL_MASK>%",
    "description": "### Tag %<__WAVEFORMATEXTENSIBLE_CHANNEL_MASK>%\n\nChannel mask, channel layout of the track coded as hex.\n\n[FB2K reference]()"
  },
  {
    "token": "%__ENC_DELAY%",
    "description": "### Tag %__ENC_DELAY%\n\nLAME proprietary MP3 enc_delay value for gapless playback.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__ENC_DELAY>%",
    "description": "### Tag %<__ENC_DELAY>%\n\nLAME proprietary MP3 enc_delay value for gapless playback.\n\n[FB2K reference]()"
  },
  {
    "token": "%__ENC_PADDING%",
    "description": "### Tag %__ENC_PADDING%\n\nLAME proprietary MP3 enc_padding value for gapless playback.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__ENC_PADDING>%",
    "description": "### Tag %<__ENC_PADDING>%\n\nLAME proprietary MP3 enc_padding value for gapless playback.\n\n[FB2K reference]()"
  },
  {
    "token": "%__MP3_ACCURATE_LENGTH%",
    "description": "### Tag %__MP3_ACCURATE_LENGTH%\n\nMP3 duration.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__MP3_ACCURATE_LENGTH>%",
    "description": "### Tag %<__MP3_ACCURATE_LENGTH>%\n\nMP3 duration.\n\n[FB2K reference]()"
  },
  {
    "token": "%__MP3_STEREO_MODE%",
    "description": "### Tag %__MP3_STEREO_MODE%\n\nStereo mode used in MP3 file.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__MP3_STEREO_MODE>%",
    "description": "### Tag %<__MP3_STEREO_MODE>%\n\nStereo mode used in MP3 file.\n\n[FB2K reference]()"
  },
  {
    "token": "%__VERSION%",
    "description": "### Tag %__VERSION%\n\nVersion of tool.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__VERSION>%",
    "description": "### Tag %<__VERSION>%\n\nVersion of tool.\n\n[FB2K reference]()"
  },
  {
    "token": "%__FLAGS%",
    "description": "### Tag %__FLAGS%\n\nFlags of tool.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__FLAGS>%",
    "description": "### Tag %<__FLAGS>%\n\nFlags of tool.\n\n[FB2K reference]()"
  },
  {
    "token": "%__channel_mode%",
    "description": "### Tag %__channel_mode%\n\nChannel Mode, description of channels.\n\n[FB2K reference]()"
  },
  {
    "token": "%<__channel_mode>%",
    "description": "### Tag %<__channel_mode>%\n\nChannel Mode, description of channels.\n\n[FB2K reference]()"
  },
  {
    "token": "channels",
    "description": "### Function $channels()\n\nThe number of channels in text format.\n\n[FB2K reference]()"
  },
  {
    "token": "%replaygain_album_gain%",
    "description": "### Tag %replaygain_album_gain%\n\nhe ReplayGain album gain value.\n\n[FB2K reference]()"
  },
  {
    "token": "%<replaygain_album_gain>%",
    "description": "### Tag %<replaygain_album_gain>%\n\nhe ReplayGain album gain value.\n\n[FB2K reference]()"
  },
  {
    "token": "%replaygain_album_peak%",
    "description": "### Tag %replaygain_album_peak%\n\nThe ReplayGain album peak value.\n\n[FB2K reference]()"
  },
  {
    "token": "%<replaygain_album_peak>%",
    "description": "### Tag %<replaygain_album_peak>%\n\nThe ReplayGain album peak value.\n\n[FB2K reference]()"
  },
  {
    "token": "%replaygain_album_peak_db%",
    "description": "### Tag %replaygain_album_peak_db%\n\nThe ReplayGain album peak value in decibels.\n\n[FB2K reference]()"
  },
  {
    "token": "%<replaygain_album_peak_db>%",
    "description": "### Tag %<replaygain_album_peak_db>%\n\nThe ReplayGain album peak value in decibels.\n\n[FB2K reference]()"
  },
  {
    "token": "%replaygain_track_gain%",
    "description": "### Tag %replaygain_track_gain%\n\nThe ReplayGain track gain value.\n\n[FB2K reference]()"
  },
  {
    "token": "%<replaygain_track_gain>%",
    "description": "### Tag %<replaygain_track_gain>%\n\nThe ReplayGain track gain value.\n\n[FB2K reference]()"
  },
  {
    "token": "%replaygain_track_peak%",
    "description": "### Tag %replaygain_track_peak%\n\nThe ReplayGain track peak value.\n\n[FB2K reference]()"
  },
  {
    "token": "%<replaygain_track_peak>%",
    "description": "### Tag %<replaygain_track_peak>%\n\nThe ReplayGain track peak value.\n\n[FB2K reference]()"
  },
  {
    "token": "%replaygain_track_peak_db%",
    "description": "### Tag %replaygain_track_peak_db%\n\nThe ReplayGain track peak value in decibels.\n\n[FB2K reference]()"
  },
  {
    "token": "%<replaygain_track_peak_db>%",
    "description": "### Tag %<replaygain_track_peak_db>%\n\nThe ReplayGain track peak value in decibels.\n\n[FB2K reference]()"
  },
  {
    "token": "%filename%",
    "description": "### Tag %filename%\n\nThe filename without directory and extension.\n\n[FB2K reference]()"
  },
  {
    "token": "%<filename>%",
    "description": "### Tag %<filename>%\n\nThe filename without directory and extension.\n\n[FB2K reference]()"
  },
  {
    "token": "%filename_ext%",
    "description": "### Tag %filename_ext%\n\nThe filename with extension, but without the directory.\n\n[FB2K reference]()"
  },
  {
    "token": "%<filename_ext>%",
    "description": "### Tag %<filename_ext>%\n\nThe filename with extension, but without the directory.\n\n[FB2K reference]()"
  },
  {
    "token": "%directoryname%",
    "description": "### Tag %directoryname%\n\nThe name of the parent directory only, not the complete path.\n\n[FB2K reference]()"
  },
  {
    "token": "%<directoryname>%",
    "description": "### Tag %<directoryname>%\n\nThe name of the parent directory only, not the complete path.\n\n[FB2K reference]()"
  },
  {
    "token": "%last_modified%",
    "description": "### Tag %last_modified%\n\nThe date and time the file was last modified. Eg: 2005-12-22 00:04:10\n\n[FB2K reference]()"
  },
  {
    "token": "%<last_modified>%",
    "description": "### Tag %<last_modified>%\n\nThe date and time the file was last modified. Eg: 2005-12-22 00:04:10\n\n[FB2K reference]()"
  },
  {
    "token": "%path%",
    "description": "### Tag %path%\n\nThe complete path, including the filename and extension.\n\n[FB2K reference]()"
  },
  {
    "token": "%<path>%",
    "description": "### Tag %<path>%\n\nThe complete path, including the filename and extension.\n\n[FB2K reference]()"
  },
  {
    "token": "%_path_raw%",
    "description": "### Tag %_path_raw%\n\nThe path as URL including the protocol scheme.\n\n[FB2K reference]()"
  },
  {
    "token": "%<_path_raw>%",
    "description": "### Tag %<_path_raw>%\n\nThe path as URL including the protocol scheme.\n\n[FB2K reference]()"
  },
  {
    "token": "%subsong%",
    "description": "### Tag %subsong%\n\nThe subsong index.\n\n[FB2K reference]()"
  },
  {
    "token": "%<subsong>%",
    "description": "### Tag %<subsong>%\n\nThe subsong index.\n\n[FB2K reference]()"
  },
  {
    "token": "%_foobar2000_version%",
    "description": "### Tag %_foobar2000_version%\n\nThe version of foobar2000.\n\n[FB2K reference]()"
  },
  {
    "token": "%<_foobar2000_version>%",
    "description": "### Tag %<_foobar2000_version>%\n\nThe version of foobar2000.\n\n[FB2K reference]()"
  },
  {
    "token": "year",
    "description": "### Function $year(time)\n\nRetrieves the year part (formatted as four digits) from a time/date string.\n\n[FB2K reference]()"
  },
  {
    "token": "month",
    "description": "### Function $month(time)\n\nRetrieves the month part (formatted as two digits) from a time/date string.\n\n[FB2K reference]()"
  },
  {
    "token": "day_of_month",
    "description": "### Function $day_of_month(time)\n\nRetrieves the day of month part (formatted as two digits) from a time/date string.\n\n[FB2K reference]()"
  },
  {
    "token": "date",
    "description": "### Function $date(time)\n\nRetrieves the date part (formatted as YYYY-MM-DD) from a time/date string.\n\n[FB2K reference]()"
  },
  {
    "token": "time",
    "description": "### Function $time(time)\n\nRetrieves the time part (formatted as HH:MM:SS or HH:MM) from a date/time string.\n\n[FB2K reference]()"
  },
  {
    "token": "put",
    "description": "### Function $put(name,value)\n\ntores value in the variable name and returns value unaltered.\n\n[FB2K reference]()"
  },
  {
    "token": "puts",
    "description": "### Function $puts(name,value)\n\ntores value in the variable name and returns nothing.\n\n[FB2K reference]()"
  },
  {
    "token": "get",
    "description": "### Function $get(name)\n\nReturns the value that was last stored in the variable name, if the variable was not defined (yet), it returns nothing.\n\n[FB2K reference]()"
  },
  {
    "token": "%playback_time%",
    "description": "### Tag %playback_time%\n\nThe elapsed time formatted as [HH:]MM:SS.\n\n[FB2K reference]()"
  },
  {
    "token": "%<playback_time>%",
    "description": "### Tag %<playback_time>%\n\nThe elapsed time formatted as [HH:]MM:SS.\n\n[FB2K reference]()"
  },
  {
    "token": "%playback_time_seconds%",
    "description": "### Tag %playback_time_seconds%\n\nThe elapsed time in seconds.\n\n[FB2K reference]()"
  },
  {
    "token": "%<playback_time_seconds>%",
    "description": "### Tag %<playback_time_seconds>%\n\nThe elapsed time in seconds.\n\n[FB2K reference]()"
  },
  {
    "token": "%playback_time_remaining%",
    "description": "### Tag %playback_time_remaining%\n\nThe time remaining until the track ends, formatted as [HH:]MM:SS.\n\n[FB2K reference]()"
  },
  {
    "token": "%<playback_time_remaining>%",
    "description": "### Tag %<playback_time_remaining>%\n\nThe time remaining until the track ends, formatted as [HH:]MM:SS.\n\n[FB2K reference]()"
  },
  {
    "token": "%playback_time_remaining_seconds%",
    "description": "### Tag %playback_time_remaining_seconds%\n\nThe time remaining until the track ends, in seconds.\n\n[FB2K reference]()"
  },
  {
    "token": "%<playback_time_remaining_seconds>%",
    "description": "### Tag %<playback_time_remaining_seconds>%\n\nThe time remaining until the track ends, in seconds.\n\n[FB2K reference]()"
  },
  {
    "token": "%isplaying%",
    "description": "### Tag %isplaying%\n\n'1' if file is currently playing, empty string otherwise.\n\n[FB2K reference]()"
  },
  {
    "token": "%<isplaying>%",
    "description": "### Tag %<isplaying>%\n\n'1' if file is currently playing, empty string otherwise.\n\n[FB2K reference]()"
  },
  {
    "token": "%ispaused%",
    "description": "### Tag %ispaused%\n\n'1' if playback is paused, empty string otherwise.\n\n[FB2K reference]()"
  },
  {
    "token": "%<ispaused>%",
    "description": "### Tag %<ispaused>%\n\n'1' if playback is paused, empty string otherwise.\n\n[FB2K reference]()"
  },
  {
    "token": "%list_index%",
    "description": "### Tag %list_index%\n\nA zero-padded playlist index of specified item. The first item is at index 1.\n\n[FB2K reference]()"
  },
  {
    "token": "%<list_index>%",
    "description": "### Tag %<list_index>%\n\nA zero-padded playlist index of specified item. The first item is at index 1.\n\n[FB2K reference]()"
  },
  {
    "token": "%list_total%",
    "description": "### Tag %list_total%\n\nThe number of items in the playlist.\n\n[FB2K reference]()"
  },
  {
    "token": "%<list_total>%",
    "description": "### Tag %<list_total>%\n\nThe number of items in the playlist.\n\n[FB2K reference]()"
  },
  {
    "token": "%queue_index%",
    "description": "### Tag %queue_index%\n\nIndex of the specified item in the playback queue. If the item has been queued multiple times, %queue_index% evaluates to the first index.\n\n[FB2K reference]()"
  },
  {
    "token": "%<queue_index>%",
    "description": "### Tag %<queue_index>%\n\nIndex of the specified item in the playback queue. If the item has been queued multiple times, %queue_index% evaluates to the first index.\n\n[FB2K reference]()"
  },
  {
    "token": "%queue_indexes%",
    "description": "### Tag %queue_indexes%\n\nList of indexes of the specified item in the playback queue. Same as %queue_index% unless the item has been queued more than once.\n\n[FB2K reference]()"
  },
  {
    "token": "%<queue_indexes>%",
    "description": "### Tag %<queue_indexes>%\n\nList of indexes of the specified item in the playback queue. Same as %queue_index% unless the item has been queued more than once.\n\n[FB2K reference]()"
  },
  {
    "token": "%queue_total%",
    "description": "### Tag %queue_total%\n\nTotal amount of tracks in playback queue.\n\n[FB2K reference]()"
  },
  {
    "token": "%<queue_total>%",
    "description": "### Tag %<queue_total>%\n\nTotal amount of tracks in playback queue.\n\n[FB2K reference]()"
  },
  {
    "token": "blend",
    "description": "### Function $blend(color1,color2,part,total)\n\nReturns a color that is a blend between 'color1' and 'color2'.\n\n[FB2K reference]()"
  },
  {
    "token": "hsl",
    "description": "### Function $hsl()\n\nresets the text color to the default color.\n\n[FB2K reference]()"
  },
  {
    "token": "hsl",
    "description": "### Function $hsl(h,s,l)\n\nSets the color for text in the HSL color space.\n\n[FB2K reference]()"
  },
  {
    "token": "rgb",
    "description": "### Function $rgb()\n\nResets the text color to the default color.\n\n[FB2K reference]()"
  },
  {
    "token": "rgb",
    "description": "### Function $rgb(r,g,b)\n\nSets the color for text.\n\n[FB2K reference]()"
  },
  {
    "token": "transition",
    "description": "### Function $transition(string,color1,color2)\n\nInserts color codes into string, so that the first character has color1, the last character has color2, and intermediate characters have blended colors.\n\n[FB2K reference]()"
  },
  {
    "token": "meta_branch_remap",
    "description": "### Function $meta_branch_remap(name)\n\nIt is identical to '%<name>%' except it does not produce a '?', if the tag does not exist.\n\n[FB2K reference]()"
  },
  {
    "token": "meta_branch",
    "description": "### Function $meta_branch(name)\n\nLike '$meta_branch_remap(name)', but without the tag remapping.\n\n[FB2K reference]()"
  },
  {
    "token": "%play_counts%",
    "description": "### Tag %play_counts%\n\nReturns how many times this tracks has been played. If the track has not been played yet, the field does not exist.\n\n[FB2K reference]()"
  },
  {
    "token": "%<play_counts>%",
    "description": "### Tag %<play_counts>%\n\nReturns how many times this tracks has been played. If the track has not been played yet, the field does not exist.\n\n[FB2K reference]()"
  },
  {
    "token": "%first_played%",
    "description": "### Tag %first_played%\n\nReturns the date and time when the track was first played. If the track has not been played yet, the field does not exist.\n\n[FB2K reference]()"
  },
  {
    "token": "%<first_played>%",
    "description": "### Tag %<first_played>%\n\nReturns the date and time when the track was first played. If the track has not been played yet, the field does not exist.\n\n[FB2K reference]()"
  },
  {
    "token": "%last_played%",
    "description": "### Tag %last_played%\n\nReturns the date and time when the track was last played. If the track has not been played yet, the field does not exist.\n\n[FB2K reference]()"
  },
  {
    "token": "%<last_played>%",
    "description": "### Tag %<last_played>%\n\nReturns the date and time when the track was last played. If the track has not been played yet, the field does not exist.\n\n[FB2K reference]()"
  },
  {
    "token": "%played_per_day%",
    "description": "### Tag %played_per_day%\n\nReturns the average of how many times per day track has been played, based on time first played, time last played and times played (average daily playcount between %first_played% and %last_played%). If the track has not been played yet, the field does not exist.\n\n[FB2K reference]()"
  },
  {
    "token": "%<played_per_day>%",
    "description": "### Tag %<played_per_day>%\n\nReturns the average of how many times per day track has been played, based on time first played, time last played and times played (average daily playcount between %first_played% and %last_played%). If the track has not been played yet, the field does not exist.\n\n[FB2K reference]()"
  },
  {
    "token": "%added%",
    "description": "### Tag %added%\n\nReturns the date and time at which track has been added to Media Library. Even if the track has not been played yet, the field exists, logically.\n\n[FB2K reference]()"
  },
  {
    "token": "%<added>%",
    "description": "### Tag %<added>%\n\nReturns the date and time at which track has been added to Media Library. Even if the track has not been played yet, the field exists, logically.\n\n[FB2K reference]()"
  },
  {
    "token": "%rating%",
    "description": "### Tag %rating%\n\nReturns Rating Value (can be integer from 1 to 5). If the track has not been rated yet, the field does not exist.\n\n[FB2K reference]()"
  },
  {
    "token": "%<rating>%",
    "description": "### Tag %<rating>%\n\nReturns Rating Value (can be integer from 1 to 5). If the track has not been rated yet, the field does not exist.\n\n[FB2K reference]()"
  },
  {
    "token": "%rating_stars%",
    "description": "### Tag %rating_stars%\n\nReturns Song's Rating Value, formatted as up to five stars, e.g. ★★★. If the track has not been rated yet, the field does not exist.\n\n[FB2K reference]()"
  },
  {
    "token": "%<rating_stars>%",
    "description": "### Tag %<rating_stars>%\n\nReturns Song's Rating Value, formatted as up to five stars, e.g. ★★★. If the track has not been rated yet, the field does not exist.\n\n[FB2K reference]()"
  },
  {
    "token": "%rating_stars_fixed%",
    "description": "### Tag %rating_stars_fixed%\n\nReturns Song's Rating Value, formatted as five stars, e.g. ★★★☆☆. If the track has not been rated yet, the field does not exist.\n\n[FB2K reference]()"
  },
  {
    "token": "%<rating_stars_fixed>%",
    "description": "### Tag %<rating_stars_fixed>%\n\nReturns Song's Rating Value, formatted as five stars, e.g. ★★★☆☆. If the track has not been rated yet, the field does not exist.\n\n[FB2K reference]()"
  },
  {
    "token": "%node_name%",
    "description": "### Tag %node_name%\n\nName of the node, either a playlist or a folder.\n\n[FB2K reference]()"
  },
  {
    "token": "%<node_name>%",
    "description": "### Tag %<node_name>%\n\nName of the node, either a playlist or a folder.\n\n[FB2K reference]()"
  },
  {
    "token": "%is_folder%",
    "description": "### Tag %is_folder%\n\nA boolean value for use in '$if( ...)' expressions and is true when the node is a folder.\n\n[FB2K reference]()"
  },
  {
    "token": "%<is_folder>%",
    "description": "### Tag %<is_folder>%\n\nA boolean value for use in '$if( ...)' expressions and is true when the node is a folder.\n\n[FB2K reference]()"
  },
  {
    "token": "%count%",
    "description": "### Tag %count%\n\nWill provide the number of children (folders or playlists) for each folder or the number of items for playlists.\n\n[FB2K reference]()"
  },
  {
    "token": "%<count>%",
    "description": "### Tag %<count>%\n\nWill provide the number of children (folders or playlists) for each folder or the number of items for playlists.\n\n[FB2K reference]()"
  },
  {
    "token": "%playlist_duration%",
    "description": "### Tag %playlist_duration%\n\nWill provide the duration of playlists.\n\n[FB2K reference]()"
  },
  {
    "token": "%<playlist_duration>%",
    "description": "### Tag %<playlist_duration>%\n\nWill provide the duration of playlists.\n\n[FB2K reference]()"
  },
  {
    "token": "%playlist_size%",
    "description": "### Tag %playlist_size%\n\nWill provide the size of playlists (in kB, MB or GB).\n\n[FB2K reference]()"
  },
  {
    "token": "%<playlist_size>%",
    "description": "### Tag %<playlist_size>%\n\nWill provide the size of playlists (in kB, MB or GB).\n\n[FB2K reference]()"
  }
]
